<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.mypage.dao.AddressDAO">



	<select id="list" resultType="outaddress">
		SELECT 
        p.addressNumber, 
        p.name, 
        p.positionLevel, 
        p.rankLevel,
        p.departmentName,
        p.phoneNumber,
        p.CompanyName
    FROM personalAddressBook p
    WHERE p.EmployeeID = #{userId}
    ORDER BY p.addressNumber ASC
	</select>
	
	
	<delete id="delete">
		DELETE FROM personalAddressBook WHERE addressNumber = #{param1}
	</delete>
	

	<select id="searchUser" resultType="outaddress">
	 select addressNumber, employeeID, name, positionLevel, rankLevel, departmentName, phoneNumber,CompanyName
	    from personalAddressBook
	    where departmentName = #{query} OR name = #{query}
	</select>
		 
	 
	<insert id="insert" parameterType="hashmap">
		INSERT into personalAddressBook (employeeID ,name,positionLevel,rankLevel,departmentName,phoneNumber,CompanyName)
values (#{userId},#{name},#{positionLevel},#{rankLevel},#{departmentName},#{phoneNumber},#{CompanyName})
	</insert>
	
	<select id="detail" resultType="outaddress">
		SELECT * FROM 
			personalAddressBook WHERE addressNumber = #{param1}
	</select>
	
	
	<update id="update" parameterType="map">
	
	UPDATE personalAddressBook 
		<set>
			<if test="!name.equals('')">name = #{name},</if>
			<if test="!positionLevel.equals('')">positionLevel = #{positionLevel},</if>
			<if test="!departmentName.equals('')">departmentName = #{departmentName},</if>
			<if test="!rankLevel.equals('')">rankLevel = #{rankLevel},</if>
			<if test="!phoneNumber.equals('')">phoneNumber = #{phoneNumber},</if>
			<if test="!CompanyName.equals('')">CompanyName = #{CompanyName}</if>
		</set>
		WHERE addressNumber = #{addressNumber}
	</update>
	
	<!--  수정 -->
	<update id="outaddressupdate" parameterType="hashmap">
     	UPDATE personalAddressBook SET name=#{name}, positionLevel=#{positionLevel}, rankLevel=#{rankLevel}, 
	departmentName=#{departmentName},phoneNumber=#{phoneNumber},CompanyName=#{CompanyName}
     		WHERE addressNumber=#{addressNumber}
    </update>
	
	
	
	<!-- 내부 리스트 -->
	
	<select id="inlistCall" resultType="inaddress" >
	SELECT e.name,e.phoneNumber, d.departmentName, p.positionName,r.rankName  FROM employee e ,department d , `position` p, `rank` r 
WHERE e.employeeID is not null AND  e.departmentID = d.departmentID AND e.positionID = p.positionID And
e.rankID = r.rankID 	
	</select>



<!-- 내부서치 -->
	<select id="inaddresssearch" resultType="inaddress">
		 SELECT e.name, e.phoneNumber, d.departmentName, p.positionName, r.rankName
    FROM employee e
    JOIN department d ON e.departmentID = d.departmentID
    JOIN `position` p ON e.positionID = p.positionID
    JOIN `rank` r ON e.rankID = r.rankID
    WHERE (d.departmentName = #{mul} OR e.name = #{mul})
      AND e.departmentID = d.departmentID 
      AND e.positionID = p.positionID 
      AND e.rankID = r.rankID;
	</select>


	<!-- 수정페이지 접속 리스트 -->
	<select id="outupdate" resultType="outaddress">
		SELECT * FROM 
			personalAddressBook WHERE addressNumber = #{param1}
	</select>
	

</mapper>