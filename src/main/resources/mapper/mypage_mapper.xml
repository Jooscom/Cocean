<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.mypage.dao.MypageDAO">
<!--  
<select id="myinfo" resultType="mypage"> 
   	SELECT e.name,e.phoneNumber,e.employeeID , d.departmentName, p.positionName,r.rankName  FROM employee e ,department d , `position` p, `rank` r 
WHERE e.employeeID = #{param1} AND  e.departmentID = d.departmentID AND e.positionID = p.positionID And
e.rankID = r.rankID ;


</select>
-->
<!-- 리스트 -->
<!--  
<select id="mypagelist" resultType="mypage">
		 
		   SELECT e.name,e.phoneNumber, d.departmentName, p.positionName,r.rankName,e.remainingAnnualLeave  
   FROM employee e ,department d , `position` p, `rank` r 
WHERE e.employeeID = #{parma1} AND  e.departmentID = d.departmentID AND e.positionID = p.positionID And
e.rankID = r.rankID


SELECT e.name, e.phoneNumber, d.departmentName, p.positionName, r.rankName, e.remainingAnnualLeave
FROM employee e
JOIN department d ON e.departmentID = d.departmentID
JOIN `position` p ON e.positionID = p.positionID
JOIN `rank` r ON e.rankID = r.rankID
WHERE e.employeeID = #{param1}

UNION

SELECT idx, serverFileName
FROM file
WHERE path = 'profile' AND idx = #{param2}

	</select>
-->

<!-- 마이페이지 리스트 -->
	<select id="mypagedetail">
				SELECT 
		    e.employeeID, e.name, p.positionName,p.positionID, r.rankName,r.rankID, e.address, e.phoneNumber,e.remainingAnnualLeave ,b.branchName,b.branchID, d.departmentName, h.hqName,h.hqID, res.responName,
		    f_profile.serverFileName AS profileImage, f_signature.serverFileName AS signatureImage,e.joinDate,e.status
		FROM employee e
		JOIN department d ON e.departmentID = d.departmentID
		JOIN headquarters h ON d.hqID = h.hqID 
		JOIN branch b ON h.branchID = b.branchID 
		JOIN responsibility res ON e.responID = res.responID
		JOIN `position` p ON e.positionID = p.positionID 
		JOIN `rank` r ON e.rankID = r.rankID
		LEFT JOIN file f_profile ON f_profile.idx = e.employeeID AND f_profile.path = 'profile'
		LEFT JOIN file f_signature ON f_signature.idx = e.employeeID AND f_signature.path = 'signature'
		WHERE e.employeeID = #{employeeID};
	
	</select>
	
	
	
<!--  내 정보 -->
<select id="datail">
				SELECT 
		    e.employeeID, e.name, p.positionName,p.positionID, r.rankName,r.rankID, e.address, e.phoneNumber, b.branchName,b.branchID, d.departmentName,d.departmentID, h.hqName,h.hqID,res.responID, res.responName,
		    f_profile.serverFileName AS profileImage, f_signature.serverFileName AS signatureImage,e.joinDate,e.status,e.remainingAnnualLeave
		FROM employee e
		JOIN department d ON e.departmentID = d.departmentID
		JOIN headquarters h ON d.hqID = h.hqID 
		JOIN branch b ON h.branchID = b.branchID 
		JOIN responsibility res ON e.responID = res.responID
		JOIN `position` p ON e.positionID = p.positionID 
		JOIN `rank` r ON e.rankID = r.rankID
		LEFT JOIN file f_profile ON f_profile.idx = e.employeeID AND f_profile.path = 'profile'
		LEFT JOIN file f_signature ON f_signature.idx = e.employeeID AND f_signature.path = 'signature'
		WHERE e.employeeID = #{employeeID};		
	</select>

	

<!-- 연차  -->

<select id="getEmployeeAnnual" >
	    SELECT value
		FROM annualLeave
		WHERE year = (
		    SELECT FLOOR(DATEDIFF(NOW(), joinDate) / 365) AS years 
		    FROM employee 
		    WHERE  employeeID = #{employeeID}
		); 
	</select>



<!--  수정 -->
<select id="selectEncpw" parameterType="int" resultType="string">
SELECT password FROM employee WHERE employeeID = #{employeeID}
</select>

<update id="changePw" >
update employee set password = #{newPass} where employeeID = #{employeeID}
</update>

	<select id="employeeHistory">
		SELECT historyID,startDate ,endDate ,organizationName ,remarks  FROM employeeHistory WHERE category ='학력' AND employeeID =#{employeeID}
	</select>
	
		<select id="workHistory">
		SELECT historyID,startDate ,endDate ,organizationName ,remarks  FROM employeeHistory WHERE category ='이력' AND employeeID =#{employeeID}
	</select>
	
		<select id="departmentChangeLog">
	SELECT DATE_FORMAT(dcl.changeDate, '%Y-%m-%d') AS changeDate,
	       beforeD.departmentName AS beforedpID,
	       afterD.departmentName AS afterdpID,
	       dcl.logID
	FROM departmentChangeLog dcl
	JOIN department beforeD ON beforeD.departmentID = dcl.beforedpID
	JOIN department afterD ON afterD.departmentID = dcl.afterdpID
	WHERE dcl.employeeID = #{employeeID};
	</select>
	
		<select id="findAttend">
		SELECT ad.category ,ad.vacationStartDate ,ad.vacationEndDate ,ad.usageTime  
		FROM attendanceDraft ad JOIN draft d ON ad.idx =d.idx WHERE employeeID =#{employeeID}
		AND ad.vacationStartDate BETWEEN #{startYear} AND #{endYear}
	</select>

</mapper>