<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.personnel.dao.PersonnelDAO">	
	

	
	<insert id="join" parameterType="map">
		INSERT INTO employee VALUES(#{employeeID},#{positionID},#{password},#{name},#{status},#{joinDate},#{phoneNumber},#{address},#{remainingAnnualLeave},#{departmentID},#{rankID},#{responsibility})
	</insert>
	 <select id="getBranch">
        SELECT branchName FROM branch
    </select>
	

	<select id="getBranchID">
		SELECT hqName FROM headquarters h WHERE branchID =#{branchID}
	</select>
	
	<select id="getHqID">
		select DISTINCT departmentName FROM department d WHERE hqID=#{hqID}
	</select>
	
	<select id="getDepartmentText">
		SELECT responsibility es FROM department d WHERE departmentName = #{departmentText}
	</select>
	
	<select id="getChart" resultType="tree">
		SELECT * FROM jsTree ORDER BY CASE WHEN text LIKE '%장' THEN 0 ELSE 1 END, text;
	</select>
	
	<insert id="joinTree">
    INSERT INTO jsTree VALUES
    (#{employeeID}, #{departmentID}, CONCAT(#{name}, ' ', #{positionID}), 'jstree-icon-worker')
	</insert>
	
	<select id="personnelList">
		SELECT e.employeeID,e.name,d.departmentName, r.rankName,p.positionName,e.status ,b.branchName
		FROM employee e
		JOIN department d ON e.departmentID = d.departmentID
		JOIN headquarters h ON d.hqID =h.hqID 
		JOIN branch b  ON h.branchID = b.branchID 
		JOIN `position` p ON e.positionID = p.positionID 
		JOIN `rank` r  ON e.rankID = r.rankID
		ORDER BY e.employeeID ASC
	</select>
	
	<select id="getSelectOptionBranch">
		SELECT e.employeeID,e.name,d.departmentName, r.rankName,p.positionName,e.status ,b.branchName
		FROM employee e
		JOIN department d ON e.departmentID = d.departmentID
		JOIN headquarters h ON d.hqID =h.hqID 
		JOIN branch b  ON h.branchID = b.branchID 
		JOIN `position` p ON e.positionID = p.positionID 
		JOIN `rank` r  ON e.rankID = r.rankID
		<if test="selectedBranchValue !='지점'">
		where b.branchName =#{selectedBranchValue}
		</if>
		ORDER BY e.employeeID ASC ;
	</select>
	
	<select id="searchPerson">
		SELECT e.employeeID,e.name,d.departmentName, r.rankName,p.positionName,e.status ,b.branchName
		FROM employee e
		JOIN department d ON e.departmentID = d.departmentID
		JOIN headquarters h ON d.hqID =h.hqID 
		JOIN branch b  ON h.branchID = b.branchID 
		JOIN `position` p ON e.positionID = p.positionID 
		JOIN `rank` r  ON e.rankID = r.rankID
		<if test="selectedOption == '이름'">
			WHERE e.name LIKE #{searchValue}
		</if>
		 <if test="selectedOption == '사번'">
        	WHERE e.employeeID = #{searchValue}
		 </if>
		ORDER BY e.employeeID ASC ;
	</select>
	
	<select id="checkDuplicateEmployeeID">
		select (COUNT(employeeID))  from employee e WHERE employeeID =#{employeeID}
	</select>
	
	<insert id="upload">
		INSERT INTO file(category, idx, path, serverFileName, oriFileName)
			values(#{category},#{idx},#{path},#{serverFileName},#{oriFileName})
	</insert>
	
	<select id="datail">
		SELECT 
		    e.employeeID, e.name, p.positionName,p.positionID, r.rankName,r.rankID, e.address, e.phoneNumber, b.branchName,b.branchID, d.departmentName, h.hqName,h.hqID, e.responsibility,
		    f_profile.serverFileName AS profileImage, f_signature.serverFileName AS signatureImage,e.joinDate,e.status
		FROM employee e
		JOIN department d ON e.departmentID = d.departmentID
		JOIN headquarters h ON d.hqID = h.hqID 
		JOIN branch b ON h.branchID = b.branchID 
		JOIN `position` p ON e.positionID = p.positionID 
		JOIN `rank` r ON e.rankID = r.rankID
		LEFT JOIN file f_profile ON f_profile.idx = e.employeeID AND f_profile.path = 'profile'
		LEFT JOIN file f_signature ON f_signature.idx = e.employeeID AND f_signature.path = 'signature'
		WHERE e.employeeID = #{employeeID}
	</select>
	
	<select id="employeeHistory">
		SELECT startDate ,endDate ,organizationName ,remarks  FROM employeeHistory WHERE category ='학력' AND employeeID =#{employeeID}
	</select>

	<select id="workHistory">
		SELECT startDate ,endDate ,organizationName ,remarks  FROM employeeHistory WHERE category ='이력' AND employeeID =#{employeeID}
	</select>
	
	<select id="getPositionName">
		SELECT positionID ,positionName  from `position` p;
	</select>
	
	<select id="getRankName">
		SELECT rankID,rankName from rank;
	</select>
	
	<select id="departmentChangeLog">
		SELECT dcl.changeDate,
       dcl.remarks,
       beforeD.departmentName AS beforedpID,
       afterD.departmentName AS afterdpID
		FROM departmentChangeLog dcl
		JOIN department beforeD ON beforeD.departmentID = dcl.beforedpID
		JOIN department afterD ON afterD.departmentID = dcl.afterdpID
		where dcl.employeeID = #{employeeID}
	</select>
	
	<insert id="historySave">
		INSERT INTO employeeHistory (employeeID,startDate,endDate,organizationName,remarks,category) VALUES (#{employeeID},#{startDate},#{endDate},#{organizationName},#{remarks},#{category});
	</insert>
	
	<insert id="schistorySave">
		INSERT INTO employeeHistory (employeeID,startDate,endDate,organizationName,remarks,category) VALUES (#{employeeID},#{startDate},#{endDate},#{organizationName},#{remarks},#{sccategory});
	</insert>

</mapper>