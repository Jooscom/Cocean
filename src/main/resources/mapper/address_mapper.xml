<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.mypage.dao.AddressDAO">

<!--  
<select id="addresslist" resultType="kr.co.morae.mypage.dto.AddressDTO">
		select userId, chargePrice, chargeDate, depositor from chargeHistory
			where userId = #{param1} order by chargeNo desc limit 10 set #{param2}
	</select>
-->	
<!-- 
<select id="interioraddresslist" resultType="kr.co.morae.mypage.dto.AddressDTO">
	SELECT d.departmentName, p.positionName,r.rankName  FROM employee e ,department d , `position` p, `rank` r 
WHERE e.employeeID = #{param1} AND  e.departmentID = d.departmentID AND e.positionID = p.positionID And
e.rankID = r.rankID ;
	</select>
 -->
	<!-- 
<select id="interioraddresspage" resultType="int">
		select ceil(count()/10) as pages from employee where employeeID = #{param1}
</select>
 -->

<!-- 


 <delete id="del">
      DELETE FROM personalAddressBook WHERE addressNumber=#{param1};
   </delete>


<select id="list" resultType="address">

		SELECT addressNumber, name, positionLevel,rankLevel,departmentName,phoneNumber 
		FROM personalAddressBook
	</select>
	
<select id="inlist" resultType="inaddress">
		SELECT e.name,e.phoneNumber, d.departmentName, p.positionName,r.rankName  FROM employee e ,department d , `position` p, `rank` r 
WHERE e.status = #{param1} AND  e.departmentID = d.departmentID AND e.positionID = p.positionID And
e.rankID = r.rankID 
	</select>	
 

	<select id="detail" resultType="address">
		SELECT * FROM 
			personalAddressBook WHERE addressNumber = #{param1}
	</select>
	

<update id="update" parameterType="hashmap">
		UPDATE personalAddressBook SET
			name = #{name}
			,positionLevel = #{positionLevel}
			,rankLevel = #{rankLevel}
			,departmentName = #{departmentName}
			,phoneNumber = #{phoneNumber}
		WHERE addressNumber =#{param1} 
	</update>
	-->

	<select id="list" resultType="address">
		SELECT 
			p.addressNumber, 
			p.name, 
			p.positionLevel , 
			p.rankLevel ,
			p.departmentName ,
			p.phoneNumber 
		FROM personalAddressBook p ORDER BY addressNumber asc
	</select>
	
	
	<delete id="delete">
		DELETE FROM personalAddressBook WHERE addressNumber = #{param1}
	</delete>
	
	
	<select id="namesearch" parameterType="list" resultType="address">	

		SELECT * FROM personalAddressBook WHERE name IN
			<foreach collection="list" item="item" open="(" separator="," close=")">
				 #{item}
			</foreach>
					
	</select>	
	
	<insert id="insert" parameterType="hashmap">
		INSERT into personalAddressBook (employeeID ,name,positionLevel,rankLevel,departmentName,phoneNumber)
values (#{userId},#{name},#{positionLevel},#{rankLevel},#{departmentName},#{phoneNumber})
	</insert>
	

</mapper>