<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.board.dao.BoardDAO">	

	<select id="getTotalCount">
		SELECT COUNT(*)
		FROM(
			(SELECT b.boardID FROM board b
				LEFT JOIN  employee e ON e.employeeID = b.employeeID
				WHERE b.isHidden = 0 AND b.isPinned = 0 AND b.category = #{category}
				<if test="!search.equals('')">
					AND
					<choose>
						<when test="searchCategory.equals('name')">e.name</when>
						<when test="searchCategory.equals('title')">b.title</when>
					</choose>
					LIKE CONCAT('%',#{search},'%')
				</if>)
			UNION ALL
			(SELECT b2.boardID
				FROM board b2 WHERE b2.isHidden = 0 AND b2.isPinned = 1 AND b2.category = #{category})
		) AS Total
	</select>


	<select id="boardList" parameterType="board">
		SELECT *
		FROM(
			(SELECT b.boardID, b.employeeID, b.title, isPinned
				,DATE_FORMAT(b.creationDate, '%Y-%m-%d %H:%i') AS creationDate
				,IFNULL(e.name, '익명') AS name
				FROM board b
				LEFT JOIN  employee e ON e.employeeID = b.employeeID
				WHERE isHidden = 0 AND isPinned = 1 AND category = #{category})
			UNION ALL
			(SELECT b.boardID, b.employeeID, b.title, isPinned
				,DATE_FORMAT(b.creationDate, '%Y-%m-%d %H:%i') AS creationDate
				,IFNULL(e.name, '익명') AS name
				FROM board b
				LEFT JOIN  employee e ON e.employeeID = b.employeeID
				WHERE b.isHidden = 0 AND b.isPinned = 0 AND b.category = #{category}
					<if test="!search.equals('')">
						AND
						<choose>
							<when test="searchCategory.equals('name')">name</when>
							<when test="searchCategory.equals('title')">b.title</when>
						</choose>
						LIKE CONCAT('%',#{search},'%')
					</if>
				)
		) AS boardLIst
		ORDER BY isPinned DESC, boardID DESC
		LIMIT #{perPage} OFFSET #{offset}
	</select>
	

	<insert id="boardWrite" parameterType="board">
		INSERT INTO board
			(employeeID,category,title,content,isPinned) VALUES(
			#{employeeID},#{category},#{title},#{content},#{isPinned})
	</insert>
	
	<select id="boardDetail" resultType="board">
		SELECT 
			b.boardID, b.title, b.content, b.isPinned, b.isHidden, b.employeeID
			,(SELECT e.name FROM employee e WHERE e.employeeID = b.employeeID) AS name
			,TO_CHAR(creationDate, 'yyyy-mm-dd hh24:mi') AS creationDate
		FROM board b WHERE boardID = #{param1}
	</select>
	
	<select id="prevNext" resultType="map">
		SELECT
			(SELECT MIN(boardID) FROM board b WHERE category = #{param2} AND boardID <![CDATA[>]]> #{param1}) AS next
			,(SELECT MAX(boardID) FROM board b WHERE category = #{param2} AND boardID <![CDATA[<]]> #{param1}) AS prev
	</select>
	
	<select id="commentList" resultType="board">
		SELECT c.commentID, c.content, c.employeeID
			,(SELECT e.name FROM employee e WHERE e.employeeID = c.employeeID) AS name
			,TO_CHAR(creationDate, 'yyyy-mm-dd hh24:mi') AS creationDate
			FROM comment c WHERE c.isHidden = 0 AND c.boardID = #{param1}
	</select>
	
	<insert id="commentWrite" parameterType="board" useGeneratedKeys="true" keyColumn="commentID" keyProperty="commentID">
		INSERT INTO comment(employeeID,content,boardID) VALUES(#{employeeID},#{content},#{boardID})
	</insert>
	
	<select id="commentDetail" resultType="board">
		SELECT c.commentID, c.content, c.employeeID
			,(SELECT e.name FROM employee e WHERE e.employeeID = c.employeeID) AS name
			,TO_CHAR(creationDate, 'yyyy-mm-dd hh24:mi') AS creationDate
			FROM comment c WHERE c.commentID = #{param1}
	</select>
	
	<delete id="commentDel">
		DELETE FROM comment WHERE commentID = #{param1}
	</delete>
	
	<update id="commentHidden">
		UPDATE comment SET isHidden = 1 WHERE commentID =#{param1}
	</update>
	
		
</mapper>













