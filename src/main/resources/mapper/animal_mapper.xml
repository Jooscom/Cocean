<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.aquarium.dao.AnimalDAO">	
	
	<select id="animalList"  parameterType="animalfilter" resultType="animal">
		SELECT am.animalID, am.nickname, bct.commonName, bct.scientificName, am.status, fi.serverFileName
			,CONCAT(am.classificationCode, LPAD(am.CodeNumber,6,'0')) AS animalCode
			FROM animalManagement am
			NATURAL JOIN biologicalClassificationTable bct
			LEFT JOIN (SELECT idx, MIN(serverFileName) AS serverFileName FROM file WHERE `path` = 'animal' GROUP BY idx) AS fi ON fi.idx = am.animalID
			WHERE 
				am.status IN (
					<foreach collection="statusValues" item="status" separator=",">
						#{status}
					</foreach>
				) AND am.classificationCode IN(
					<foreach collection="classifiValues" item="classifi" separator=",">
						#{classifi}
					</foreach>					
				)
				<if test="inchargeEmployeeID != 0">
					AND am.animalID IN (SELECT idx FROM inCharge WHERE employeeID = #{inchargeEmployeeID} AND category = 'animal')
				</if>
				<if test="!searchName.equals('')">
					AND am.animalID IN (SELECT DISTINCT idx FROM inCharge ic NATURAL JOIN (SELECT employeeID, name FROM employee e) AS em
						WHERE ic.category = 'animal' AND em.name LIKE CONCAT('%',#{searchName},'%'))
				</if>

	</select>
	
	<select id="classficationSearch" resultType="classfication">
		SELECT speciesID, taxonomy, scientificName, commonName
			FROM biologicalClassificationTable
			WHERE taxonomy LIKE CONCAT('%',#{keyword},'%')
				OR scientificName LIKE CONCAT('%',#{keyword},'%')
				OR commonName LIKE CONCAT('%',#{keyword},'%')				
	</select>
	
	<select id="tankList" resultType="map">
		SELECT branchID, b.branchName, tm.tankID, tm.tankName
			FROM tankManagement tm
			NATURAL JOIN branch b
			ORDER BY branchID, tm.tankName;
	</select>
	
	<insert id="animalWrte" parameterType="animal" useGeneratedKeys="true" keyColumn="animalID" keyProperty="animalID">
    INSERT INTO animalManagement
	(speciesID, tankID, branchID, classificationCode, CodeNumber, nickname, individual, birthDate, entryDate, status, details)
    	SELECT #{speciesID},#{tankID},#{branchID},#{classificationCode},
			IFNULL((SELECT MAX(CodeNumber) FROM animalManagement WHERE classificationCode = #{classificationCode}), 0) + 1,
			#{nickname},#{individual},#{birthDate},#{entryDate},#{status},#{details}
	</insert>

	<insert id="upload">
		INSERT INTO file(category, idx, path, serverFileName, oriFileName)
			values(#{category},#{idx},#{path},#{serverFileName},#{oriFileName})
	</insert>
	
	<select id="animalDetail" resultType="animal">
		SELECT am.*, bct.commonName, bct.taxonomy, bct.scientificName
			,CONCAT(am.classificationCode, LPAD(am.CodeNumber,6,'0')) AS animalCode
			,(SELECT b.branchName FROM branch b WHERE am.branchID = b.branchID) AS branchName
			,(SELECT tm.tankName FROM tankManagement tm WHERE am.tankID = tm.tankID) AS tankName
			FROM animalManagement am NATURAL JOIN biologicalClassificationTable bct
			WHERE animalID = #{parma1}

	</select>
	
	<select id="animalImage" resultType="file">
	 	SELECT idx, serverFileName FROM file WHERE path = 'animal' AND idx = #{param1}
	</select>
	
	<select id="animalInCharge" resultType="incharge">
		SELECT ic.idx, e.employeeID, de.hqName, de.departmentName, e.name FROM employee e 
			LEFT JOIN (SELECT d.departmentID, h.hqName, d.departmentName FROM department d NATURAL JOIN headquarters h WHERE d.isActive =1) AS de
				ON e.departmentID = de.departmentID
			INNER JOIN (SELECT employeeID, idx FROM inCharge WHERE category = 'animal' AND idx = #{param1}) AS ic ON e.employeeID = ic.employeeID
			WHERE e.status = '재직'
	</select>
	
	<select id="animalLogPlan" resultType="logplan">
		SELECT lpt.logID, lpt.content, lpt.status, em.*
			,DATE_FORMAT(lpt.creationDate, '%Y-%m-%d %H:%i') AS creationDate
			FROM
				logPlanTable lpt
			NATURAL JOIN
				(SELECT e.employeeID, d.departmentName, e.name
					FROM employee e LEFT JOIN department d
					ON e.departmentID = d.departmentID
				) AS em
			WHERE
				lpt.coceanCategory = 'animal'
				AND lpt.idx = #{param1}
				AND lpt.manageCategory = #{param2}
				AND DATE_FORMAT(creationDate, '%Y-%m') = #{param3}
	</select>
	
	<insert id="logplanWrite" parameterType="logplan">
		INSERT INTO logPlanTable(employeeID, idx, content, manageCategory, status, coceanCategory)
			VALUES(#{employeeID},#{idx},#{content},#{manageCategory},#{status},#{coceanCategory})
	</insert>
	
	<update id="statusChange">
		UPDATE animalManagement SET status = #{status} WHERE animalID = #{animalID}
	</update>
	
	
	<select id="employeeInfo" parameterType="int" resultType="map">
		SELECT de.departmentName, de.hqName, e.name FROM employee e
			NATURAL JOIN (SELECT d.departmentID, d.departmentName, h.hqName FROM department d
				NATURAL JOIN (SELECT hqID, hqName FROM headquarters) AS h
			) AS de
			WHERE e.employeeID = #{param1}
	</select>
	
	<delete id="inchargeDel">
		DELETE FROM inCharge WHERE category = 'animal' AND idx = #{animalID} AND employeeID IN
		<foreach collection="delList" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>	

	<insert id="inchargeInsert">
		INSERT INTO inCharge VALUES
		<foreach collection="insertList" item="item" separator=",">
			(#{item},'animal',#{animalID})
		</foreach>
	</insert>
	
	<delete id="logplanDel">
		DELETE FROM logPlanTable WHERE coceanCategory = 'animal' AND logID = #{param1}
	</delete>
	
	<update id="animalUpdate" parameterType="animal">
		UPDATE animalManagement SET tankID=#{tankID}, nickname=#{nickname}, individual=#{individual}
			,birthDate=#{birthDate}, entryDate=#{entryDate}, status=#{status}, details=#{details}
		WHERE animalID=#{animalID}
	</update>
	
	<delete id="animalDel">
		DELETE FROM animalManagement WHERE animalID=#{param1}
	</delete>

	<select id="getAnimalTitle" resultType="animal">
		SELECT am.nickname, am.status, bct.commonName,
			CONCAT(am.classificationCode, LPAD(am.CodeNumber,6,'0')) AS animalCode
		FROM animalManagement am NATURAL JOIN biologicalClassificationTable bct
		WHERE animalID=#{animalID}
	</select>


	<insert id="testalarm">
		INSERT INTO notificationHistory(employeeID,url,content) values(#{param1},#{param2},#{param3});
	</insert>
	
	
	<update id="logplanUpdateDo">
		UPDATE logPlanTable SET content = #{param2} WHERE logID = #{param1}
	</update>

	<update id="logplanComplete">
		UPDATE logPlanTable SET status = '완료' WHERE logID = #{param1}
	</update>

	
</mapper>













