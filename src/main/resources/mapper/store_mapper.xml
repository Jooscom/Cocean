<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.store.dao.StoreDAO">	
	
	<select id="branchList" resultType="branch">
		SELECT * FROM branch
	</select>
	
	<select id="branchProductList" resultType="branchProduct">
	SELECT 
    bp.productIndex, bp.branchID, bp.productID, bp.status, 
    pi.productName, pi.category, pi.price, 
    b.branchName, b.branchLocation, b.branchLatitude, b.branchLongitude,
    f.serverFileName
FROM 
    branchProduct bp
LEFT JOIN 
    productInformation pi ON bp.productID = pi.productID
INNER JOIN 
    branch b ON bp.branchID = b.branchID
LEFT JOIN 
    file f ON pi.productID = f.idx AND f.category = "상품"
ORDER BY 
    bp.productID ASC;
	</select>
	
	<select id="totalProductNumber" resultType="branchProduct">
	SELECT bp.branchID, b.branchName,
    COUNT(bp.productID) -1 AS totalProductNumber
	FROM branchProduct bp
	JOIN branch b ON b.branchID = bp.branchID
	GROUP BY bp.branchID, b.branchName
	</select>
	
	<select id="branchTicketList" resultType="branchProduct">
		SELECT 
	    bp.productIndex, bp.branchID, bp.productID, bp.status, 
	    pi.productName, pi.category, pi.price, 
	    b.branchName, b.branchLocation, b.branchLatitude, b.branchLongitude
		FROM 
		    branchProduct bp
		INNER JOIN 
		    productInformation pi ON bp.productID = pi.productID
		INNER JOIN 
		    branch b ON bp.branchID = b.branchID
		WHERE 
		    pi.category = "티켓"
		ORDER BY 
		    bp.productID ASC
	
	</select>
	
	<select id="searchProduct" resultType="branchProduct">
	<choose>
        <when test="branchName == '본사상품'">
        	select * from productInformation  where productName LIKE CONCAT(#{searchKeyword}, '%') AND category="상품"
        </when>
    	<otherwise>
			SELECT pi.productID, pi.productName, pi.category, pi.price, bp.branchID, bp.status 
			FROM productInformation pi
			JOIN branchProduct bp ON pi.productID = bp.productID
			JOIN branch b ON bp.branchID = b.branchID
			WHERE pi.productName LIKE CONCAT(#{searchKeyword}, '%') AND b.branchName = #{branchName};
    	</otherwise>
	</choose>
	</select>
	
	<insert id="brachRegister">
	INSERT INTO branch(branchName, branchLocation, branchLatitude, branchLongitude) 
	VALUES(#{param1},#{param2},#{param3},#{param4})
	</insert>
	
	<select id="branchSelect">
	SELECT branchID FROM branch WHERE branchName=#{param1}
	</select>
	
	<insert id="branchRegisterProduct">
	INSERT INTO branchProduct(branchID, productID) VALUES(#{param1}, #{param2})
	</insert>
	
	<insert id="ticketRegister">	
	INSERT INTO brachProduct(branchID, productID) VALUES(#{param1}, #{param2})
	</insert>
	
	<!-- 본사 상품 등록 -->
	<insert id="productInfoRegister">
	INSERT INTO productInformation(productName, price, category) VALUES(#{productName}, #{price}, #{category})
	</insert>
	
	<select id="productInfoID">
	SELECT productID FROM productInformation WHERE productName=#{param1}
	</select>
	
	<insert id="productFileRegister">
	INSERT INTO file(category, idx, path, serverFileName, oriFileName) VALUES(#{param1},#{param2},#{param3},#{param4},#{param5})
	</insert>
	
	<!-- 지점상품 등록 모달창에서 상품 리스트 보여주기 -->
	<select id="modalProductList" resultType="branchProduct">
	SELECT pi.productID, pi.productName, pi.category, pi.price, f.serverFileName
	FROM productInformation pi
	LEFT JOIN file f ON pi.productID = f.idx AND f.category = '상품'
	WHERE pi.category = '상품'
	  AND pi.productID NOT IN (
	    SELECT bp.productID
	    FROM branchProduct bp
	    JOIN branch b ON bp.branchID = b.branchID
	    WHERE b.branchName = #{currentBranchName}
	  )
	</select>
	
	<!-- 지점티켓 등록 모달창에서 상품 리스트 보여주기 -->
	<select id="modalTicketList" resultType="branchProduct">
	SELECT *
	FROM productInformation pi
	WHERE pi.category = "티켓"
	  AND pi.productID NOT IN (
	    SELECT bp.productID
	    FROM branchProduct bp
	    JOIN branch b ON bp.branchID = b.branchID
	    WHERE b.branchName = #{currentBranchName}
	  )
	</select>
	
	<select id="branchIDSearch">
	SELECT branchID
	FROM branch
	WHERE branchName = #{param1}
	</select>
	
	<select id="productIDSearch" >
	SELECT productID
	FROM productInformation
	WHERE productName = #{param1}
	</select>
	
	<insert id="branchProductRegister">
	INSERT INTO branchProduct (branchID, productID) VALUES(#{param1}, #{param2})
	</insert>
	
	<select id="storeProductDetail" resultType="branchProduct">
	SELECT pi.*, f.idx, f.serverFileName
	FROM productInformation pi
	JOIN file f ON pi.productID = f.idx AND f.category ="상품"
	WHERE pi.productID = #{param1}
	</select>
	
	<delete id="branchProductDelete">
	DELETE FROM branchProduct WHERE productID=#{param1} AND branchID=#{param2}
	</delete>
</mapper>