<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.tank.dao.TankDAO">

	<select id="tankList" parameterType="map" resultType="Tank">
		SELECT tm.tankID , tm.tankName ,
		tc.tankType, b.branchName, tm.tankStatus, e.name FROM tankManagement tm
		,inCharge ic ,branch b, tankCategory tc, employee e
		WHERE ic.category = 'tank' and ic.employeeID = e.employeeID and tm.tankID =
		ic.idx and tm.categoryID = tc.categoryID and tm.branchID = b.branchID
		GROUP BY tankID 
		HAVING
		e.name like CONCAT('%',#{search},'%')
		ORDER BY tankID ASC LIMIT #{pageNum},10
	</select>
	
	<select id="totalCount" parameterType="map" resultType="Integer">
		SELECT CEIL(COUNT(*)/10) FROM employee e JOIN inCharge ic ON e.employeeID = ic.employeeID 
			WHERE ic.category = 'tank' AND e.name like CONCAT('%',#{search},'%')
	</select>
	
	
	<select id="getBranch" resultType="map">
		SELECT branchID, branchName FROM branch
	</select>
	
	<insert id="tankReg" parameterType="map" useGeneratedKeys="true" keyProperty="tankID">
	INSERT INTO tankManagement (tankID,categoryID,branchID,registrationDate,capacity,tankName,tankStatus)
	VALUES (null, #{categoryID}, #{branchID}, now(), #{capacity}, #{tankName}, '정상') 
	</insert>
	
	<insert id="mngItem" parameterType="map">
		INSERT INTO managementItemsTable (tankID, area, flooring, filter, mercury, waterLevel, 
				salinity, pH, dO, nitrates, nitrites, ammonia, phosphates) 
			VALUES (#{tankID}, #{area}, #{flooringNo}, #{filterType}, #{mercury}, #{waterLevel}, 
				#{salinity}, #{pH}, #{dO}, #{nitrates}, #{nitrites}, #{ammonia}, #{phosphates})
	</insert>
	
		<insert id="inChargeTank" parameterType="map">
		INSERT INTO inCharge (employeeID, category, idx) 
				VALUES (#{employeeID}, 'tank', #{tankID})
	</insert>
	
	<select id="tankDetail" resultType="map">
		SELECT mit.*, tm.tankName, tm.registrationDate ,tm.capacity, tm.tankStatus, b.branchName ,tc.tankType  FROM 
		managementItemsTable mit, tankManagement tm, branch b ,tankCategory tc  WHERE mit.tankID = #{param1} AND tm.tankID = #{param1}
		AND tc.categoryID = tm.categoryID  AND b.branchID = tm.branchID 
	</select>
	
	<select id="getChart" resultType="Record" parameterType="String">
		SELECT DATE_FORMAT(recordTime, '%H') AS timeSet ,recordMercury ,recordWaterLevel ,recordSalinity ,recordPh ,recordDo ,recordNitrates 
		,recordNitrites ,recordAmmonia , recordPhosphates  FROM tankRecord 
		WHERE tankID = #{param1} AND recordDate = #{param2} GROUP BY recordTime
	</select>
	
	<update id="tankSet" parameterType="map">
		UPDATE tankManagement tm, managementItemsTable mti SET 
			tm.tankName = #{tankName}
			,tm.categoryID = #{categoryID}
			,tm.tankStatus = #{status}
			,tm.capacity = #{capacity}
			,mti.area = #{area}
			,mti.flooring = #{flooringNo}
			,mti.`filter` = #{filterType}
			,mti.mercury = #{mercury}
			,mti.waterLevel = #{waterLevel}
			,mti.salinity = #{salinity}
			,mti.pH = #{pH}
			,mti.dO = #{dO}
			,mti.nitrates = #{nitrates}
			,mti.nitrites = #{nitrites}
			,mti.ammonia = #{ammonia}
			,mti.phosphates = #{phosphates}
			WHERE tm.tankID = #{tankID} AND mti.tankID = #{tankID}
	</update>
	
	<select id="tankAnimal" resultType="map">
		SELECT am.nickname , am.individual , am.status, bct.commonName ,am.animalID 
			FROM animalManagement am, biologicalClassificationTable bct  
				WHERE am.tankID = #{param1} AND am.speciesID = bct.speciesID 
	</select>
	
	<select id="tankCount" resultType="Integer">
		SELECT tankID FROM tankManagement WHERE tankStatus != '폐쇄'
	</select>
	
	<insert id="recordData" parameterType="map">
		INSERT INTO tankRecord (tankRecordID, tankID, recordDate,recordTime,recordMercury
		,recordWaterLevel,recordSalinity,recordPh,recordDo, recordNitrates, recordNitrites, recordAmmonia, recordPhosphates)
		VALUES (null,#{tankID},curdate(),now(),#{recordMercury},#{recordWaterLevel},#{recordSalinity},#{recordPh},#{recordDo},#{recordNitrates},#{recordNitrites},#{recordAmmonia},#{recordPhosphates}) 
	</insert>
	
	<select id="getEm" resultType="String">
		SELECT e.name FROM employee e 
		WHERE employeeID = (SELECT ic.employeeID FROM inCharge ic WHERE ic.category = 'tank' AND ic.idx = #{param1})
	</select>
	
<!-- 	<select id="logForm" resultType="map"> -->
<!-- 		SELECT tm.tankStatus , tr.* FROM tankManagement tm ,tankRecord tr  -->
<!-- 		WHERE tr.recordDate = CURDATE() AND tr.tankID = #{param} AND tm.tankID = #{param} ORDER BY recordTime DESC LIMIT 1 -->
<!-- 	</select> -->
	
	<select id="recentRecord" resultType="map">
		SELECT * FROM tankRecord tr WHERE recordDate = CURDATE() AND tankID = #{param} ORDER BY recordTime DESC LIMIT 1 
	</select>
	
	<select id="recordList" parameterType="String" resultType="map">
	SELECT MAX(recordMercury) as maxMer ,MIN(recordMercury) as minMer, ROUND(AVG(recordMercury),0)  as avgMer,
		MAX(recordWaterLevel) as maxWater ,MIN(recordWaterLevel) as minWater, ROUND(AVG(recordWaterLevel),0)  as avgWater,
		MAX(recordSalinity) as maxSal ,MIN(recordSalinity) as minSal, ROUND(AVG(recordSalinity),0)  as avgSal,
		MAX(recordPh) as maxPh ,MIN(recordPh) as minPh, ROUND(AVG(recordPh),0)  as avgPh,
		MAX(recordDo) as maxDo ,MIN(recordDo) as minDo, ROUND(AVG(recordDo),0)  as avgDo,
		MAX(recordNitrates) as maxNita ,MIN(recordNitrates) as minNita, ROUND(AVG(recordNitrates),0)  as avgNita,
		MAX(recordNitrites) as maxNiti ,MIN(recordNitrites) as minNiti, ROUND(AVG(recordNitrites),0)  as avgNiti,
		MAX(recordAmmonia) as maxAm ,MIN(recordAmmonia) as minAm, ROUND(AVG(recordAmmonia),0)  as avgAm,
		MAX(recordPhosphates) as maxPhos ,MIN(recordPhosphates) as minPhos, ROUND(AVG(recordPhosphates),0)  as avgPhos,
		recordDate  FROM tankRecord 
		WHERE tankID = #{param1} GROUP BY recordDate HAVING recordDate BETWEEN #{param2} AND LAST_DAY(#{param2}) ORDER BY recordTime DESC
	</select>
	
	
	<insert id="addPlan" parameterType="map">
		INSERT INTO logPlanTable VALUES (null,#{empolyeeID},'plan','house',#{tankID},now(),#{content},'진행')
	</insert>
	
	<select id="getPlan" parameterType="map" resultType="map">
		SELECT * FROM logPlanTable WHERE coceanCategory = 'house' AND manageCategory = 'plan' AND 
		creationDate BETWEEN #{curDate} AND LAST_DAY(#{curDate}) AND idx = #{tankID} AND status LIKE CONCAT('%',#{planStat},'%')
	</select>
	
</mapper>