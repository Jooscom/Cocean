<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="kr.co.cocean.aquarium.dao.AnimalDAO">	
	
	<select id="animalList" resultType="animal">
		SELECT am.animalID, am.nickname, bct.commonName, am.classificationCode, am.status
			FROM animalManagement am NATURAL JOIN biologicalClassificationTable bct
	</select>
	
	<select id="classficationSearch" resultType="classfication">
		SELECT speciesID, taxonomy, scientificName, commonName
			FROM biologicalClassificationTable
			WHERE taxonomy LIKE CONCAT('%',#{keyword},'%')
				OR scientificName LIKE CONCAT('%',#{keyword},'%')
				OR commonName LIKE CONCAT('%',#{keyword},'%')				
	</select>
	
	<select id="tankList" parameterType="int" resultType="map">
		SELECT tankName, tankID FROM tankManagement WHERE branchID = #{param1}
	</select>
	
	<insert id="animalWrte" parameterType="animal" useGeneratedKeys="true" keyColumn="animalID" keyProperty="animalID">
    INSERT INTO animalManagement
	(speciesID, tankID, branchID, classificationCode, CodeNumber, nickname, individual, birthDate, entryDate, status, details)
    	SELECT #{speciesID},#{tankID},#{branchID},#{classificationCode},
			IFNULL((SELECT MAX(CodeNumber) FROM animalManagement WHERE classificationCode = #{classificationCode}), 0) + 1,
			#{nickname},#{individual},#{birthDate},#{entryDate},#{status},#{details}
	</insert>

	<insert id="upload">
		INSERT INTO file(category, idx, path, serverFileName, oriFileName)
			values(#{category},#{idx},#{path},#{serverFileName},#{oriFileName})
	</insert>
	
	<select id="animalDetail" resultType="animal">
		SELECT am.*, bct.commonName, bct.taxonomy, bct.scientificName
			,CONCAT(am.classificationCode, LPAD(am.CodeNumber,6,'0')) AS animalCode
			,(SELECT b.branchName FROM branch b WHERE am.branchID = b.branchID) AS branchName
			,(SELECT tm.tankName FROM tankManagement tm WHERE am.tankID = tm.tankID) AS tankName
			FROM animalManagement am NATURAL JOIN biologicalClassificationTable bct
			WHERE animalID = #{parma1}

	</select>
	
	<select id="animalImage" resultType="file">
	 	SELECT idx, serverFileName FROM file WHERE path = 'animal' AND idx = #{param1}
	</select>
	
	<select id="animalInCharge" resultType="incharge">
		SELECT ic.idx, e.employeeID, de.hqName, de.departmentName, e.name FROM employee e 
			LEFT JOIN (SELECT d.departmentID, h.hqName, d.departmentName FROM department d NATURAL JOIN headquarters h WHERE d.isActive =1) AS de
				ON e.departmentID = de.departmentID
			INNER JOIN (SELECT employeeID, idx FROM inCharge WHERE category = 'animal' AND idx = #{param1}) AS ic ON e.employeeID = ic.employeeID
			WHERE e.status = '재직'
	</select>
	
	<select id="animalLogPlan" resultType="logplan">
		SELECT lpt.logID, lpt.creationDate, lpt.content ,em.*
			<if test="param2.equals('log')">,lpt.status</if>
			FROM logPlanTable lpt
			NATURAL JOIN (SELECT e.employeeID, d.departmentName, e.name FROM employee e LEFT JOIN department d ON e.departmentID = d.departmentID) AS em
			WHERE lpt.coceanCategory = 'animal'
				AND lpt.idx = #{param1}
				AND lpt.manageCategory = #{param2}
				AND DATE_FORMAT(creationDate, '%Y-%m') = #{param3}
	</select>
	
	<insert id="logplanWrite" parameterType="logplan">
		INSERT INTO logPlanTable(employeeID, idx, content, manageCategory, status, coceanCategory)
			VALUES(#{employeeID},#{idx},#{content},#{manageCategory},#{status},#{coceanCategory})
	</insert>
	
	<select id="employeeInfo" parameterType="int" resultType="map">
		SELECT de.departmentName, de.hqName, e.name FROM employee e
			NATURAL JOIN (SELECT d.departmentID, d.departmentName, h.hqName FROM department d
				NATURAL JOIN (SELECT hqID, hqName FROM headquarters) AS h
			) AS de
			WHERE e.employeeID = #{param1}
	</select>
	
	<delete id="inchargeDel">
		DELETE FROM inCharge WHERE category = 'animal' AND idx = #{animalID} AND employeeID IN
		<foreach collection="delList" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>	

	<insert id="inchargeInsert">
		INSERT INTO inCharge VALUES
		<foreach collection="insertList" item="item" separator=",">
			(#{item},'animal',#{animalID})
		</foreach>
	</insert>
	
	
</mapper>













